plugins {
	id 'java'
	id 'com.diffplug.spotless' version '6.22.0'
}

group = 'com.werockstar'
version = '1.0-SNAPSHOT'

repositories {
	mavenCentral()
}

spotless {
	java {
		removeUnusedImports()
		indentWithTabs()
	}
}

static def isLinuxOrMacOs() {
	def osName = System.getProperty('os.name').toLowerCase(Locale.ROOT)
	return osName.contains('linux') || osName.contains('mac os') || osName.contains('macos')
}

task copyGitHooks(type: Copy) {
	description 'Copies the git hooks from /git-hooks to the .git folder.'
	from("${rootDir}/git-hooks/") {
		include '**/*.sh'
		rename '(.*).sh', '$1' // Removes .sh extension, adjust if necessary
	}
	into "${rootDir}/.git/hooks"
}

task installGitHooks(type: Exec) {
	description 'Installs the pre-commit git hooks from /git-hooks.'
	group 'git hooks'

	doFirst {
		if (isLinuxOrMacOs()) {
			// Unix-like OS
			commandLine 'chmod', '-R', '+x', "${rootDir}/.git/hooks"
		} else {
			// Windows - Adjust if you have a specific command to run
			// Generally, no action is needed to change permissions on Windows
			commandLine 'cmd', '/c', 'echo', 'No permission change needed on Windows'
		}
	}

	doLast {
		logger.info('Git hook installed successfully.')
	}

	dependsOn copyGitHooks
}

dependencies {
	testImplementation platform('org.junit:junit-bom:5.9.1')
	testImplementation 'org.junit.jupiter:junit-jupiter'

	testImplementation 'org.mockito:mockito-core:5.6.0'
	implementation "io.reactivex.rxjava3:rxjava:3.1.8"
}

test {
	useJUnitPlatform()
}
